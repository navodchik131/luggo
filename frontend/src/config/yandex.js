// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –Ø–Ω–¥–µ–∫—Å API

// API –∫–ª—é—á–∏ - —Å–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è, –ø–æ—Ç–æ–º –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
// –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const GEOCODER_API_KEY = import.meta.env.VITE_YANDEX_GEOCODER_API_KEY || 
                        '493e3f3d-030a-48f2-938a-cc97aed3591e' || 
                        'e7c5ec17-5f7b-44e8-b9b0-e2c74d7a4ad8' // —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á

const MAPS_API_KEY = import.meta.env.VITE_YANDEX_MAPS_API_KEY || 
                    '493e3f3d-030a-48f2-938a-cc97aed3591e' ||
                    'e7c5ec17-5f7b-44e8-b9b0-e2c74d7a4ad8' // —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –∫–ª—é—á

console.log('üîë Ya–Ω–¥–µ–∫—Å API –∫–ª—é—á–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', {
  geocoder: GEOCODER_API_KEY ? `${GEOCODER_API_KEY.substring(0, 8)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
  maps: MAPS_API_KEY ? `${MAPS_API_KEY.substring(0, 8)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
  env_geocoder: import.meta.env.VITE_YANDEX_GEOCODER_API_KEY ? '–µ—Å—Ç—å' : '–Ω–µ—Ç',
  env_maps: import.meta.env.VITE_YANDEX_MAPS_API_KEY ? '–µ—Å—Ç—å' : '–Ω–µ—Ç'
})

export const YANDEX_CONFIG = {
  // Geocoder API –∫–ª—é—á (–¥–ª—è –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –∞–¥—Ä–µ—Å–æ–≤)
  GEOCODER_API_KEY: GEOCODER_API_KEY,
  
  // Maps JavaScript API –∫–ª—é—á (–¥–ª—è –∫–∞—Ä—Ç)
  MAPS_API_KEY: MAPS_API_KEY,
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  DEFAULT_CITY: '–ü–µ—Ä–º—å',
  DEFAULT_COORDINATES: [58.0105, 56.2502], // [lat, lng] –¥–ª—è –ü–µ—Ä–º–∏
  
  // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞
  SEARCH_OPTIONS: {
    results: 5,
    lang: 'ru_RU',
    geocode_format: 'json'
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API –∫–ª—é—á–µ–π
export const hasValidApiKey = () => {
  const isValid = YANDEX_CONFIG.GEOCODER_API_KEY && 
         YANDEX_CONFIG.GEOCODER_API_KEY !== '–í–ê–®_–†–ï–ê–õ–¨–ù–´–ô_API_–ö–õ–Æ–ß' &&
         YANDEX_CONFIG.GEOCODER_API_KEY.length > 10 &&
         !YANDEX_CONFIG.GEOCODER_API_KEY.includes('–ö–õ–Æ–ß')
         
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ API –∫–ª—é—á–∞:', {
    key: YANDEX_CONFIG.GEOCODER_API_KEY ? `${YANDEX_CONFIG.GEOCODER_API_KEY.substring(0, 8)}...` : '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
    valid: isValid,
    length: YANDEX_CONFIG.GEOCODER_API_KEY?.length || 0
  })
  
  return isValid
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
export const getGeocoderUrl = (query) => {
  const searchQuery = query.includes(YANDEX_CONFIG.DEFAULT_CITY) 
    ? query 
    : `${query}, ${YANDEX_CONFIG.DEFAULT_CITY}`
    
  const params = new URLSearchParams({
    apikey: YANDEX_CONFIG.GEOCODER_API_KEY,
    geocode: searchQuery,
    format: YANDEX_CONFIG.SEARCH_OPTIONS.geocode_format,
    results: YANDEX_CONFIG.SEARCH_OPTIONS.results,
    lang: YANDEX_CONFIG.SEARCH_OPTIONS.lang
  })
  
  const url = `https://geocode-maps.yandex.ru/1.x/?${params.toString()}`
  console.log('üåê URL –≥–µ–æ–∫–æ–¥–µ—Ä–∞:', url)
  
  return url
} 