import { useEffect, useRef, useState } from 'react'
import { YANDEX_CONFIG, hasValidApiKey } from '../config/yandex'
import logger from '../utils/logger'

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è Yandex –∫–∞—Ä—Ç
const mapStyles = `
  .route-map-container .ymaps-2-1-79-balloon,
  .route-map-container .ymaps-2-1-79-hint,
  .route-map-container .ymaps-2-1-79-popup,
  .route-map-container .ymaps-2-1-79-popup-content {
    display: none !important;
  }
  
  .route-map-container [class*="ymaps-"]:not([class*="ymaps-2-1-"]) {
    display: none !important;
  }
  
  .route-map-container > div {
    position: relative !important;
    overflow: hidden !important;
  }
`

// –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ head –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
if (!document.querySelector('#route-map-styles')) {
  const styleElement = document.createElement('style')
  styleElement.id = 'route-map-styles'
  styleElement.textContent = mapStyles
  document.head.appendChild(styleElement)
}

// –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ - –º–æ–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å –µ—Å–ª–∏ –∫–∞—Ä—Ç—ã –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç
const DEBUG_MODE = false // –ü–æ–º–µ–Ω—è–π—Ç–µ –Ω–∞ true –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

const RouteMap = ({ fromAddress, toAddress }) => {
  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  logger.log('üî• RouteMap —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è —Å –ø—Ä–æ–ø—Å–∞–º–∏:', { 
    fromAddress: fromAddress || '–ù–ï–¢',
    toAddress: toAddress || '–ù–ï–¢',
    fromAddressLength: fromAddress?.length || 0,
    toAddressLength: toAddress?.length || 0
  })

  const mapContainerRef = useRef(null)
  const mapRef = useRef(null)
  const [mapInstance, setMapInstance] = useState(null)
  const [routeInfo, setRouteInfo] = useState(null)
  const [loading, setLoading] = useState(true)
  const [error, setError] = useState(null)
  const [isFallbackMode, setIsFallbackMode] = useState(false)
  const mapId = useRef(`route_map_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`)
  const isInitialized = useRef(false)
  const isDestroying = useRef(false)

  useEffect(() => {
    logger.log('üöÄ RouteMap useEffect –∑–∞–ø—É—â–µ–Ω:', { fromAddress, toAddress, hasApiKey: hasValidApiKey() })
    
    if (!hasValidApiKey() || !fromAddress || !toAddress) {
      logger.log('‚ö†Ô∏è –£—Å–ª–æ–≤–∏—è –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:', {
        hasApiKey: hasValidApiKey(),
        hasFromAddress: !!fromAddress,
        hasToAddress: !!toAddress,
        fromAddress,
        toAddress
      })
      setLoading(false)
      return
    }

    // –ó–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ 
    if (isInitialized.current || isDestroying.current) {
      logger.log('‚ö†Ô∏è –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', {
        isInitialized: isInitialized.current,
        isDestroying: isDestroying.current
      })
      return
    }
    isInitialized.current = true

    logger.log('‚úÖ –í—Å–µ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –∑–∞–ø—É—Å–∫–∞—é –∑–∞–≥—Ä—É–∑–∫—É –∫–∞—Ä—Ç...')
    loadYandexMaps()

    // Cleanup function
    return () => {
      cleanup()
    }
  }, [fromAddress, toAddress])

  const cleanup = () => {
    isDestroying.current = true
    
    if (mapInstance) {
      try {
        mapInstance.destroy()
      } catch (err) {
        logger.log('Error destroying map:', err)
      }
      setMapInstance(null)
    }
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã
    if (mapContainerRef.current) {
      mapContainerRef.current.innerHTML = ''
    }
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ ymaps —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –æ—Å—Ç–∞—Ç—å—Å—è
    setTimeout(() => {
      const ymapsElements = document.querySelectorAll(`[id*="${mapId.current}"], [class*="ymaps"]:not([class*="ymaps-2-1-"]), .ymaps-2-1-79-balloon, .ymaps-2-1-79-hint`)
      ymapsElements.forEach(el => {
        try {
          if (el.parentNode) {
            el.parentNode.removeChild(el)
          }
        } catch (err) {
          logger.log('Error removing element:', err)
        }
      })
    }, 100)
    
    isInitialized.current = false
    isDestroying.current = false
  }

  const loadYandexMaps = async () => {
    try {
      logger.log('üó∫Ô∏è –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç...')
      logger.log('üîë API –∫–ª—é—á –µ—Å—Ç—å:', !!YANDEX_CONFIG.MAPS_API_KEY)
      logger.log('üìç –ê–¥—Ä–µ—Å–∞:', { fromAddress, toAddress })
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ API
      if (!window.ymaps) {
        logger.log('üì¶ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∑–∞–≥—Ä—É–∂–∞—é...')
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ –∏–¥–µ—Ç –ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∑–∫–∞
        if (window.ymapsLoading) {
          logger.log('‚è≥ –û–∂–∏–¥–∞—é –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π –∑–∞–≥—Ä—É–∑–∫–∏...')
          // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
          const checkLoaded = () => {
            if (window.ymaps) {
              logger.log('‚úÖ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é...')
              window.ymaps.ready(initMap)
            } else if (window.ymapsLoading) {
              setTimeout(checkLoaded, 100)
            } else {
              logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç')
              setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç')
              setLoading(false)
            }
          }
          checkLoaded()
          return
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –∑–∞–≥—Ä—É–∑–∫–∏
        window.ymapsLoading = true
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–ø—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingScripts = document.querySelectorAll('script[src*="api-maps.yandex.ru"]')
        logger.log('üßπ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:', existingScripts.length)
        existingScripts.forEach(script => script.remove())
        
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–∞—Ä—Ç –µ—Å–ª–∏ –µ—Å—Ç—å
        const existingMaps = document.querySelectorAll('[class*="ymaps"]')
        logger.log('üßπ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –∫–∞—Ä—Ç—ã:', existingMaps.length)
        existingMaps.forEach(mapEl => {
          if (mapEl !== mapRef.current) {
            mapEl.remove()
          }
        })
        
        const script = document.createElement('script')
        const scriptUrl = `https://api-maps.yandex.ru/2.1/?apikey=${YANDEX_CONFIG.MAPS_API_KEY}&lang=ru_RU`
        script.src = scriptUrl
        logger.log('üîó –ó–∞–≥—Ä—É–∂–∞—é —Å–∫—Ä–∏–ø—Ç:', scriptUrl)
        
        script.onload = () => {
          logger.log('‚úÖ –°–∫—Ä–∏–ø—Ç –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
          window.ymapsLoading = false
          window.ymaps.ready(initMap)
        }
        script.onerror = (error) => {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç:', error)
          window.ymapsLoading = false
          setError('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ')
          setLoading(false)
        }
        document.head.appendChild(script)
      } else {
        logger.log('‚úÖ –Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é...')
        // API —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ—Å—Ç–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É
        if (window.ymaps.ready) {
          window.ymaps.ready(initMap)
        } else {
          initMap()
        }
      }
    } catch (err) {
      window.ymapsLoading = false
      logger.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç:', err)
      setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç: ${err.message}`)
      setLoading(false)
    }
  }

  const initMap = async () => {
    try {
      logger.log('üöÄ –ù–∞—á–∏–Ω–∞—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–∞—Ä—Ç—ã...')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      if (isDestroying.current || !mapContainerRef.current) {
        logger.log('‚ö†Ô∏è –û—Ç–º–µ–Ω—è—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —É–Ω–∏—á—Ç–æ–∂–∞–µ—Ç—Å—è –∏–ª–∏ –Ω–µ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞')
        setLoading(false)
        return
      }

      // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∫–∞—Ä—Ç—ã
      mapContainerRef.current.innerHTML = ''
      const mapElement = document.createElement('div')
      mapElement.id = mapId.current
      mapElement.style.width = '100%'
      mapElement.style.height = '300px'
      mapElement.style.position = 'relative'
      mapContainerRef.current.appendChild(mapElement)
      
      mapRef.current = mapElement
      logger.log('üì¶ –°–æ–∑–¥–∞–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã:', mapId.current)

      // –ì–µ–æ–∫–æ–¥–∏—Ä—É–µ–º –∞–¥—Ä–µ—Å–∞
      logger.log('üîç –ù–∞—á–∏–Ω–∞—é –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–æ–≤...')
      const [fromCoords, toCoords] = await Promise.all([
        geocodeAddress(fromAddress),
        geocodeAddress(toAddress)
      ])

      if (!fromCoords || !toCoords) {
        logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', { fromCoords, toCoords })
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–¥—Ä–µ—Å–∞ –Ω–∞ –∫–∞—Ä—Ç–µ')
        setLoading(false)
        return
      }

      logger.log('üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω—ã:', { fromCoords, toCoords })

      // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É —Å –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ–º –Ω–µ–Ω—É–∂–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
      logger.log('üó∫Ô∏è –°–æ–∑–¥–∞—é –∫–∞—Ä—Ç—É...')
      const map = new window.ymaps.Map(mapElement, {
        center: fromCoords,
        zoom: 12,
        controls: ['zoomControl']
      }, {
        suppressMapOpenBlock: true,
        yandexMapDisablePoiInteractivity: true
      })

      setMapInstance(map)

      // –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫–∏ –±–µ–∑ –±–∞–ª–ª—É–Ω–æ–≤
      const fromPlacemark = new window.ymaps.Placemark(fromCoords, {
        hintContent: `–û—Ç–∫—É–¥–∞: ${fromAddress}`
      }, {
        preset: 'islands#greenDotIcon',
        hideIconOnBalloonOpen: false,
        openBalloonOnClick: false
      })

      const toPlacemark = new window.ymaps.Placemark(toCoords, {
        hintContent: `–ö—É–¥–∞: ${toAddress}`
      }, {
        preset: 'islands#redDotIcon',
        hideIconOnBalloonOpen: false,
        openBalloonOnClick: false
      })

      map.geoObjects.add(fromPlacemark)
      map.geoObjects.add(toPlacemark)

      // –°—Ç—Ä–æ–∏–º –º–∞—Ä—à—Ä—É—Ç
      buildRoute(map, fromCoords, toCoords)

    } catch (err) {
      logger.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã:', err)
      setError('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã')
      setLoading(false)
    }
  }

  const geocodeAddress = async (address) => {
    try {
      logger.log('üîç –ì–µ–æ–∫–æ–¥–∏—Ä—É—é –∞–¥—Ä–µ—Å:', address)
      const result = await window.ymaps.geocode(address, {
        results: 1
      })
      
      logger.log('üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:', result)
      const firstGeoObject = result.geoObjects.get(0)
      
      if (firstGeoObject) {
        const coords = firstGeoObject.geometry.getCoordinates()
        logger.log('‚úÖ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞–π–¥–µ–Ω—ã:', coords)
        return coords
      }
      
      logger.warn('‚ö†Ô∏è –ê–¥—Ä–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω:', address)
      return null
    } catch (err) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–æ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è:', err)
      return null
    }
  }

  const buildRoute = async (map, fromCoords, toCoords) => {
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MultiRouter API
      if (window.ymaps.multiRouter) {
        // –°–æ–∑–¥–∞–µ–º –º—É–ª—å—Ç–∏–º–∞—Ä—à—Ä—É—Ç
        const multiRoute = new window.ymaps.multiRouter.MultiRoute({
          referencePoints: [fromCoords, toCoords],
          params: {
            routingMode: 'auto'
          }
        }, {
          boundsAutoApply: true,
          routeActiveStrokeWidth: 6,
          routeActiveStrokeColor: '#3b82f6',
          wayPointVisible: false,
          routeStrokeWidth: 4,
          routeStrokeColor: '#3b82f6',
          pinVisible: false
        })

        map.geoObjects.add(multiRoute)

        // –ñ–¥–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
        multiRoute.model.events.add('requestsuccess', () => {
          try {
            const routes = multiRoute.getRoutes()
            if (routes.getLength() > 0) {
              const activeRoute = routes.get(0)
              const distance = activeRoute.properties.get('distance')
              const duration = activeRoute.properties.get('duration')

              setRouteInfo({
                distance: Math.round(distance.value / 1000 * 10) / 10, // –∫–º —Å –æ–¥–Ω–∏–º –∑–Ω–∞–∫–æ–º
                duration: Math.round(duration.value / 60), // –º–∏–Ω—É—Ç—ã
                durationText: formatDuration(Math.round(duration.value / 60))
              })
            }
            setLoading(false)
          } catch (err) {
            logger.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞:', err)
            setError('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞')
            setLoading(false)
          }
        })

        multiRoute.model.events.add('requestfail', () => {
          setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç')
          setLoading(false)
        })
      } else {
        // Fallback: –ø—Ä–æ—Å—Ç–∞—è –ª–∏–Ω–∏—è –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏
        setIsFallbackMode(true)
        const polyline = new window.ymaps.Polyline([fromCoords, toCoords], {}, {
          strokeColor: '#3b82f6',
          strokeWidth: 4,
          strokeOpacity: 0.8
        })
        
        map.geoObjects.add(polyline)
        
        // –ü–æ–¥–≥–æ–Ω—è–µ–º –∫–∞—Ä—Ç—É –ø–æ–¥ —Ç–æ—á–∫–∏
        map.setBounds([fromCoords, toCoords], {
          checkZoomRange: true,
          zoomMargin: 50
        })

        // –ü—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –ø–æ –ø—Ä—è–º–æ–π
        const distance = calculateDistance(fromCoords, toCoords)
        const estimatedDuration = Math.round(distance * 2) // 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –∫–º –ø—Ä–∏–º–µ—Ä–Ω–æ
        
        setRouteInfo({
          distance: Math.round(distance * 10) / 10,
          duration: estimatedDuration,
          durationText: formatDuration(estimatedDuration)
        })
        
        setLoading(false)
      }

    } catch (err) {
      logger.error('–û—à–∏–±–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞:', err)
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç')
      setLoading(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
  const calculateDistance = (coords1, coords2) => {
    const R = 6371 // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –∫–º
    const lat1 = coords1[0] * Math.PI / 180
    const lat2 = coords2[0] * Math.PI / 180
    const deltaLat = (coords2[0] - coords1[0]) * Math.PI / 180
    const deltaLng = (coords2[1] - coords1[1]) * Math.PI / 180

    const a = Math.sin(deltaLat / 2) * Math.sin(deltaLat / 2) +
              Math.cos(lat1) * Math.cos(lat2) *
              Math.sin(deltaLng / 2) * Math.sin(deltaLng / 2)
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))

    return R * c
  }

  const formatDuration = (minutes) => {
    if (minutes < 60) {
      return `${minutes} –º–∏–Ω`
    } else {
      const hours = Math.floor(minutes / 60)
      const remainingMinutes = minutes % 60
      return remainingMinutes > 0 
        ? `${hours} —á ${remainingMinutes} –º–∏–Ω`
        : `${hours} —á`
    }
  }

  // –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –±–µ–∑ –∫–∞—Ä—Ç—ã
  if (DEBUG_MODE) {
    return (
      <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 sm:p-6">
        <div className="flex items-center gap-3 mb-3">
          <div className="text-blue-500 text-2xl">üó∫Ô∏è</div>
          <div>
            <h3 className="font-semibold text-blue-800 text-sm sm:text-base">–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏</h3>
            <p className="text-blue-600 text-xs sm:text-sm">–ö–∞—Ä—Ç–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏</p>
          </div>
        </div>
        
        <div className="bg-white rounded-lg p-3 sm:p-4 border border-blue-200">
          <div className="space-y-2 text-sm">
            <div className="flex items-start gap-2">
              <span className="text-green-600 mt-0.5">üìç</span>
              <div>
                <span className="font-medium text-gray-700">–û—Ç–∫—É–¥–∞:</span>
                <div className="text-gray-600">{fromAddress || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              </div>
            </div>
            <div className="flex items-start gap-2">
              <span className="text-red-600 mt-0.5">üìç</span>
              <div>
                <span className="font-medium text-gray-700">–ö—É–¥–∞:</span>
                <div className="text-gray-600">{toAddress || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    )
  }

  if (!hasValidApiKey()) {
    return (
      <div className="bg-gray-50 border border-gray-200 rounded-lg p-6 text-center">
        <div className="text-gray-400 text-4xl mb-2">üó∫Ô∏è</div>
        <h3 className="font-semibold text-gray-700 mb-2">–ö–∞—Ä—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
        <p className="text-sm text-gray-600">
          –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã —Å –º–∞—Ä—à—Ä—É—Ç–æ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç
        </p>
      </div>
    )
  }

  if (!fromAddress || !toAddress) {
    return (
      <div className="bg-gray-50 border border-gray-200 rounded-lg p-6 text-center">
        <div className="text-gray-400 text-4xl mb-2">üìç</div>
        <h3 className="font-semibold text-gray-700 mb-2">–ú–∞—Ä—à—Ä—É—Ç</h3>
        <p className="text-sm text-gray-600">
          –ù–µ —É–∫–∞–∑–∞–Ω—ã –∞–¥—Ä–µ—Å–∞ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–∞
        </p>
      </div>
    )
  }

  if (error) {
    return (
      <div className="bg-red-50 border border-red-200 rounded-lg p-4 sm:p-6">
        <div className="flex items-center gap-3 mb-3">
          <div className="text-red-500 text-2xl">‚ö†Ô∏è</div>
          <div>
            <h3 className="font-semibold text-red-800 text-sm sm:text-base">–ö–∞—Ä—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
            <p className="text-red-600 text-xs sm:text-sm">{error}</p>
          </div>
        </div>
        
        {/* –ü—Ä–æ—Å—Ç–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ –±–µ–∑ –∫–∞—Ä—Ç—ã */}
        <div className="bg-white rounded-lg p-3 sm:p-4 border border-red-200">
          <div className="space-y-2 text-sm">
            <div className="flex items-start gap-2">
              <span className="text-green-600 mt-0.5">üìç</span>
              <div>
                <span className="font-medium text-gray-700">–û—Ç–∫—É–¥–∞:</span>
                <div className="text-gray-600">{fromAddress}</div>
              </div>
            </div>
            <div className="flex items-start gap-2">
              <span className="text-red-600 mt-0.5">üìç</span>
              <div>
                <span className="font-medium text-gray-700">–ö—É–¥–∞:</span>
                <div className="text-gray-600">{toAddress}</div>
              </div>
            </div>
          </div>
          <div className="mt-3 pt-3 border-t border-gray-200">
            <button 
              onClick={() => {
                setError(null)
                setLoading(true)
                loadYandexMaps()
              }}
              className="text-blue-600 hover:text-blue-700 text-sm font-medium"
            >
              üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="bg-white border border-gray-200 rounded-lg overflow-hidden">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–ª–∞—à–∫–∞ */}
      {routeInfo && (
        <div className="route-info-card">
          <div className="route-info-header">
            <div className="flex items-center gap-3 sm:gap-4">
              <div className="route-info-icon">
                <span className="text-xl sm:text-2xl">üöö</span>
              </div>
              <div className="route-info-details">
                <h3 className="route-info-title">–ú–∞—Ä—à—Ä—É—Ç –ø–µ—Ä–µ–µ–∑–¥–∞</h3>
                <p className="route-info-subtitle">
                  {isFallbackMode 
                    ? '–ü—Ä–∏–±–ª–∏–∑–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ø–æ –ø—Ä—è–º–æ–π' 
                    : '–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–æ–µ –≤—Ä–µ–º—è –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ'
                  }
                </p>
              </div>
            </div>
            <div className="route-info-stats">
              <div className="route-info-stat">
                <div className="route-info-stat-value">
                  {routeInfo.distance}
                </div>
                <div className="route-info-stat-label">—Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ</div>
              </div>
              {routeInfo.duration && (
                <div className="route-info-stat">
                  <div className="route-info-stat-value">
                    {routeInfo.duration}
                  </div>
                  <div className="route-info-stat-label">–≤—Ä–µ–º—è –≤ –ø—É—Ç–∏</div>
                </div>
              )}
            </div>
          </div>
        </div>
      )}

      {/* –ö–∞—Ä—Ç–∞ */}
      <div className="relative">
        <div ref={mapRef} className="w-full h-64 sm:h-80 lg:h-96 bg-gray-100" />
        
        {/* Loader */}
        {(loading || error) && (
          <div className="absolute inset-0 bg-gray-100 bg-opacity-75 flex items-center justify-center">
            <div className="flex flex-col items-center gap-2">
              <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
              <span className="text-sm text-gray-600">
                {error ? '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã' : '–ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞...'}
              </span>
            </div>
          </div>
        )}
        
        {/* –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã */}
        {!loading && error && (
          <div className="absolute inset-0 bg-gray-50 flex items-center justify-center">
            <div className="text-center p-4">
              <div className="text-gray-400 text-3xl sm:text-4xl mb-3">üó∫Ô∏è</div>
              <h3 className="font-semibold text-gray-700 mb-2 text-sm sm:text-base">–ö–∞—Ä—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</h3>
              <p className="text-xs sm:text-sm text-gray-600 max-w-xs mx-auto">
                –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—É—é –∫–∞—Ä—Ç—É, –Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞—Ä—à—Ä—É—Ç–µ –≤—ã—à–µ –¥–æ—Å—Ç—É–ø–Ω–∞
              </p>
            </div>
          </div>
        )}
      </div>
      
      {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      {routeInfo && (
        <div className="p-3 sm:p-4 bg-gray-50 border-t">
          <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 text-sm">
            <div className="flex items-center gap-2">
              <span className="text-gray-400">üìç</span>
              <span className="text-gray-600">–ú–∞—Ä—à—Ä—É—Ç –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –æ—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ</span>
            </div>
            <div className="flex items-center gap-2">
              <span className="text-gray-400">‚è±Ô∏è</span>
              <span className="text-gray-600">–í—Ä–µ–º—è —É–∫–∞–∑–∞–Ω–æ –±–µ–∑ —É—á–µ—Ç–∞ –ø—Ä–æ–±–æ–∫</span>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default RouteMap 