const { User, Notification } = require('../src/models');
const { connectDB } = require('../src/config/database');

async function createTestNotifications() {
  try {
    await connectDB();
    
    console.log('üîÑ –°–æ–∑–¥–∞—é —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...');
    
    // –ù–∞–π—Ç–∏ –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const user = await User.findOne();
    
    if (!user) {
      console.log('‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ —Å–∏—Å—Ç–µ–º–µ.');
      process.exit(1);
    }
    
    console.log(`üìß –°–æ–∑–¥–∞—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.name} (${user.email})`);
    
    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    const testNotifications = [
      {
        userId: user.id,
        type: 'new_bid',
        title: '–ù–æ–≤—ã–π –æ—Ç–∫–ª–∏–∫ –Ω–∞ –≤–∞—à—É –∑–∞—è–≤–∫—É',
        message: '–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ –æ—Ç–∫–ª–∏–∫–Ω—É–ª—Å—è –Ω–∞ –∑–∞—è–≤–∫—É "–ü–µ—Ä–µ–µ–∑–¥ 2-–∫–æ–º–Ω–∞—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã" —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º 15000 ‚ÇΩ',
        actionUrl: '/tasks/1',
        relatedType: 'bid',
        relatedId: '123e4567-e89b-12d3-a456-426614174000',
        metadata: {
          executorName: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
          price: 15000,
          taskTitle: '–ü–µ—Ä–µ–µ–∑–¥ 2-–∫–æ–º–Ω–∞—Ç–Ω–æ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã'
        }
      },
      {
        userId: user.id,
        type: 'bid_accepted',
        title: '–í–∞—à –æ—Ç–∫–ª–∏–∫ –ø—Ä–∏–Ω—è—Ç!',
        message: '–ó–∞–∫–∞–∑—á–∏–∫ –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞ –ø—Ä–∏–Ω—è–ª–∞ –≤–∞—à –æ—Ç–∫–ª–∏–∫ –Ω–∞ –∑–∞—è–≤–∫—É "–û—Ñ–∏—Å–Ω—ã–π –ø–µ—Ä–µ–µ–∑–¥" –Ω–∞ —Å—É–º–º—É 25000 ‚ÇΩ',
        actionUrl: '/tasks/2',
        relatedType: 'bid',
        relatedId: '123e4567-e89b-12d3-a456-426614174001',
        metadata: {
          customerName: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
          taskTitle: '–û—Ñ–∏—Å–Ω—ã–π –ø–µ—Ä–µ–µ–∑–¥',
          price: 25000
        }
      },
      {
        userId: user.id,
        type: 'new_message',
        title: '–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ',
        message: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤ –Ω–∞–ø–∏—Å–∞–ª –≤–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –∑–∞—è–≤–∫–µ "–í—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞"',
        actionUrl: '/messages/1',
        relatedType: 'message',
        relatedId: '123e4567-e89b-12d3-a456-426614174002',
        metadata: {
          senderName: '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤',
          taskTitle: '–í—ã–≤–æ–∑ –º—É—Å–æ—Ä–∞'
        }
      },
      {
        userId: user.id,
        type: 'task_status_changed',
        title: '–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞',
        message: '–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ "–ü–µ—Ä–µ–µ–∑–¥ –¥–∞—á–∏" –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ "–†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"',
        actionUrl: '/tasks/3',
        relatedType: 'task',
        relatedId: '123e4567-e89b-12d3-a456-426614174003',
        metadata: {
          taskTitle: '–ü–µ—Ä–µ–µ–∑–¥ –¥–∞—á–∏',
          oldStatus: 'in_progress',
          newStatus: 'awaiting_confirmation'
        }
      },
      {
        userId: user.id,
        type: 'system',
        title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Luggo!',
        message: '–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞—è–≤–∫–∏ –∏–ª–∏ –æ—Ç–∫–ª–∏–∫–∞—Ç—å—Å—è –Ω–∞ –Ω–∏—Ö –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å.',
        actionUrl: '/profile',
        relatedType: 'user',
        relatedId: user.id,
        metadata: {
          welcomeMessage: true
        },
        isRead: true // –≠—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É–∂–µ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ
      }
    ];
    
    // –°–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    for (const notificationData of testNotifications) {
      const notification = await Notification.create(notificationData);
      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: ${notification.title}`);
    }
    
    console.log(`üéâ –°–æ–∑–¥–∞–Ω–æ ${testNotifications.length} —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.name}`);
    console.log('üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ!');
    
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:', error);
    process.exit(1);
  }
}

createTestNotifications(); 