import logger from '../utils/logger'
// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Ç–∏–ª–∏—Ç–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
const isDevelopment = import.meta.env.MODE === 'development'

// –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ development
export const logger = {
  log: (...args) => {
    if (isDevelopment) {
      logger.log(...args)
    }
  },
  
  error: (...args) => {
    if (isDevelopment) {
      logger.error(...args)
    }
  },
  
  warn: (...args) => {
    if (isDevelopment) {
      logger.warn(...args)
    }
  },
  
  info: (...args) => {
    if (isDevelopment) {
      logger.info(...args)
    }
  },

  // –î–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –≤–∏–¥–µ—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ
  critical: (...args) => {
    logger.error('[CRITICAL]', ...args)
  },

  // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (—Ç–æ–ª—å–∫–æ ID)
  userAction: (action, userId) => {
    if (isDevelopment) {
      logger.log(`üîµ User Action: ${action}`, `User ID: ${userId}`)
    }
  },

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤ (–±–µ–∑ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö)
  apiCall: (method, url, status) => {
    if (isDevelopment) {
      logger.log(`üåê API ${method.toUpperCase()} ${url} - Status: ${status}`)
    }
  },

  // WebSocket —Å–æ–±—ã—Ç–∏—è
  websocket: (event, data = '') => {
    if (isDevelopment) {
      logger.log(`üîå WebSocket: ${event}`, data)
    }
  }
}

// –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ - –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
export const reportError = (error, context = {}) => {
  // –í production –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –≤ Sentry –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–∏—Å
  if (!isDevelopment) {
    // TODO: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    // –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    logger.error('[ERROR REPORT]', {
      message: error.message,
      timestamp: new Date().toISOString(),
      context: {
        url: window.location.href,
        userAgent: navigator.userAgent,
        ...context
      }
    })
  } else {
    logger.error('Development Error:', error, context)
  }
}

export default logger 