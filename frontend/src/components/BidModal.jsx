import { useState } from 'react'
import api from '../services/api'

const BidModal = ({ isOpen, onClose, task, onBidCreated }) => {
  const [formData, setFormData] = useState({
    price: '',
    comment: ''
  })
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è
    if (!formData.price || formData.price <= 0) {
      setError('–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É')
      return
    }

    try {
      setLoading(true)
      setError('')
      
      console.log('–û—Ç–ø—Ä–∞–≤–ª—è—é –æ—Ç–∫–ª–∏–∫:', formData)
      console.log('Task ID:', task.id)
      
      const response = await api.post(`/tasks/${task.id}/bids`, {
        price: parseFloat(formData.price),
        comment: formData.comment
      })
      
      console.log('–û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞:', response.data)
      
      if (response.data.success) {
        // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
        setFormData({ price: '', comment: '' })
        
        // –í—ã–∑–æ–≤ –∫–æ–ª–±–µ–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –æ—Ç–∫–ª–∏–∫–æ–≤
        if (onBidCreated) {
          onBidCreated(response.data.bid)
        }
        
        // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
        onClose()
      } else {
        setError(response.data.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞')
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞:', err)
      setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç–∫–ª–∏–∫–∞')
    } finally {
      setLoading(false)
    }
  }

  const handleChange = (e) => {
    const { name, value } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: value
    }))
    // –°–±—Ä–æ—Å –æ—à–∏–±–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
    if (error) setError('')
  }

  if (!isOpen) return null

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-md w-full max-h-[90vh] overflow-y-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="flex justify-between items-center p-6 border-b">
          <h2 className="text-xl font-bold">–û—Ç–∫–ª–∏–∫–Ω—É—Ç—å—Å—è –Ω–∞ –∑–∞—è–≤–∫—É</h2>
          <button
            onClick={onClose}
            className="text-gray-400 hover:text-gray-600 text-2xl"
            disabled={loading}
          >
            √ó
          </button>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞—è–≤–∫–µ */}
        <div className="p-6 border-b bg-gray-50">
          <h3 className="font-semibold text-lg mb-2">{task.title}</h3>
          <div className="text-sm text-gray-600 space-y-1">
            <div>üìç {task.fromAddress} ‚Üí {task.toAddress}</div>
            <div>üìÖ {new Date(task.date).toLocaleDateString('ru-RU')}</div>
          </div>
        </div>

        {/* –§–æ—Ä–º–∞ */}
        <form onSubmit={handleSubmit} className="p-6">
          {error && (
            <div className="mb-4 p-3 bg-red-100 border border-red-400 text-red-700 rounded">
              {error}
            </div>
          )}

          {/* –¶–µ–Ω–∞ */}
          <div className="mb-4">
            <label htmlFor="price" className="form-label">
              –í–∞—à–∞ —Ü–µ–Ω–∞ * <span className="text-gray-500">(‚ÇΩ)</span>
            </label>
            <input
              type="number"
              id="price"
              name="price"
              value={formData.price}
              onChange={handleChange}
              min="1"
              step="0.01"
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: 5000"
              className="form-input"
              required
              disabled={loading}
            />
            <div className="form-help">
              –£–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤–∞—à–∏—Ö —É—Å–ª—É–≥ –≤ —Ä—É–±–ª—è—Ö
            </div>
          </div>

          {/* –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π */}
          <div className="mb-6">
            <label htmlFor="comment" className="form-label">
              –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π <span className="text-gray-500">(–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)</span>
            </label>
            <textarea
              id="comment"
              name="comment"
              value={formData.comment}
              onChange={handleChange}
              placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–≤–æ–µ–º –æ–ø—ã—Ç–µ, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏, –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è—Ö —Ä–∞–±–æ—Ç—ã..."
              rows="4"
              maxLength="1000"
              className="form-input resize-none"
              disabled={loading}
            />
            <div className="form-help">
              {formData.comment.length}/1000 —Å–∏–º–≤–æ–ª–æ–≤
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ */}
          <div className="flex gap-3">
            <button
              type="button"
              onClick={onClose}
              className="btn btn-secondary flex-1"
              disabled={loading}
            >
              –û—Ç–º–µ–Ω–∞
            </button>
            <button
              type="submit"
              className="btn btn-primary flex-1"
              disabled={loading}
            >
              {loading ? (
                <div className="flex items-center justify-center">
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  –û—Ç–ø—Ä–∞–≤–∫–∞...
                </div>
              ) : (
                '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–∫–ª–∏–∫'
              )}
            </button>
          </div>
        </form>
      </div>
    </div>
  )
}

export default BidModal 