import { Link, useLocation, useNavigate } from 'react-router-dom'
import { useAuth } from '../hooks/useAuth'
import { User, LogOut, Plus, MessageCircle, FileText, ChevronDown, Menu, X } from 'lucide-react'
import NotificationIcon from './NotificationIcon'
import UserAvatar from './UserAvatar'
import Footer from './Footer'
import { useState, useEffect } from 'react'
import { useUnread } from '../contexts/UnreadContext'

const Layout = ({ children }) => {
  const { user, logout, isAuthenticated } = useAuth()
  const { unreadCount, resetUnreadCount } = useUnread()
  const location = useLocation()
  const navigate = useNavigate()
  const [dropdownOpen, setDropdownOpen] = useState(false)
  const [guidesDropdownOpen, setGuidesDropdownOpen] = useState(false)
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –≥–ª–∞–≤–Ω–æ–π
  const isHomePage = location.pathname === '/'

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∏—Ö –æ–±–ª–∞—Å—Ç–∏
  useEffect(() => {
    const handleClickOutside = (event) => {
      if (!event.target.closest('.guides-dropdown')) {
        setGuidesDropdownOpen(false)
      }
      if (!event.target.closest('.mobile-menu')) {
        setMobileMenuOpen(false)
      }
    }
    
    document.addEventListener('mousedown', handleClickOutside)
    return () => document.removeEventListener('mousedown', handleClickOutside)
  }, [])

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞—Ä—à—Ä—É—Ç–∞
  useEffect(() => {
    setMobileMenuOpen(false)
  }, [location.pathname])

  const handleChatsClick = () => {
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —á–∞—Ç–∞–º
    resetUnreadCount()
    navigate('/chats')
    setMobileMenuOpen(false)
  }

  const handleLogout = () => {
    logout()
    setMobileMenuOpen(false)
  }

  return (
    <div className="min-h-screen bg-gray-50">
      <header className="bg-white shadow-sm border-b relative">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <Link to="/" className="text-2xl font-bold text-blue-600">
              Luggo
            </Link>
            
            {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
            <nav className="hidden md:flex space-x-8">
              <Link to="/tasks" className="text-gray-700 hover:text-blue-600 transition-colors">
                –ó–∞—è–≤–∫–∏
              </Link>
              <Link to="/executors" className="text-gray-700 hover:text-blue-600 transition-colors">
                –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏
              </Link>
              
              {/* –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞" */}
              <div className="relative guides-dropdown">
                <button
                  onClick={() => setGuidesDropdownOpen(!guidesDropdownOpen)}
                  className="flex items-center gap-1 text-gray-700 hover:text-blue-600 transition-colors"
                >
                  –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞
                  <ChevronDown size={16} className={`transition-transform ${guidesDropdownOpen ? 'rotate-180' : ''}`} />
                </button>
                
                {guidesDropdownOpen && (
                  <div className="absolute top-full left-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50">
                    <Link
                      to="/for-customers"
                      className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-blue-600"
                      onClick={() => setGuidesDropdownOpen(false)}
                    >
                      üè† –î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
                    </Link>
                    <Link
                      to="/for-executors"
                      className="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-blue-600"
                      onClick={() => setGuidesDropdownOpen(false)}
                    >
                      üîß –î–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
                    </Link>
                  </div>
                )}
              </div>
              
              <Link to="/news" className="text-gray-700 hover:text-blue-600 transition-colors">
                –ù–æ–≤–æ—Å—Ç–∏
              </Link>
              {isAuthenticated && (
                <>
                  {user?.role === 'admin' && (
                    <Link to="/admin" className="text-red-600 hover:text-red-700 font-medium">
                      –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
                    </Link>
                  )}
                </>
              )}
            </nav>

            {/* –î–µ—Å–∫—Ç–æ–ø–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
            <div className="hidden md:flex items-center space-x-4">
              {isAuthenticated ? (
                <>
                  {user?.role === 'customer' && (
                    <>
                      <Link
                        to="/my-tasks"
                        className="btn btn-secondary flex items-center space-x-2"
                      >
                        <FileText size={16} />
                        <span className="hidden lg:inline">–ú–æ–∏ –∑–∞—è–≤–∫–∏</span>
                      </Link>
                      
                      <Link
                        to="/create-task"
                        className="btn btn-primary flex items-center space-x-2"
                      >
                        <Plus size={16} />
                        <span className="hidden lg:inline">–°–æ–∑–¥–∞—Ç—å</span>
                      </Link>
                    </>
                  )}
                  
                  {user?.role === 'executor' && (
                    <Link
                      to="/my-jobs"
                      className="btn btn-primary flex items-center space-x-2"
                    >
                      <FileText size={16} />
                      <span className="hidden lg:inline">–ú–æ–∏ —Ä–∞–±–æ—Ç—ã</span>
                    </Link>
                  )}

                  <div className="flex items-center space-x-2">
                    {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
                    <NotificationIcon />
                    
                    {/* –ß–∞—Ç—ã */}
                    <button
                      onClick={handleChatsClick}
                      className="p-2 text-gray-700 hover:text-blue-600 rounded-full hover:bg-gray-100 transition-colors relative"
                      title="–ú–æ–∏ —á–∞—Ç—ã"
                    >
                      <MessageCircle size={20} />
                      {unreadCount > 0 && (
                        <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full min-w-[18px] h-[18px] flex items-center justify-center px-1">
                          {unreadCount > 99 ? '99+' : unreadCount}
                        </span>
                      )}
                    </button>
                    
                    <Link to="/profile" className="flex items-center space-x-2 text-gray-700 hover:text-blue-600">
                      <UserAvatar user={user} size="md" />
                      <span className="hidden lg:inline">{user?.name}</span>
                    </Link>
                    
                    <button
                      onClick={logout}
                      className="text-gray-700 hover:text-red-600"
                    >
                      <LogOut size={20} />
                    </button>
                  </div>
                </>
              ) : (
                <div className="flex items-center space-x-4">
                  <Link to="/login" className="text-gray-700 hover:text-blue-600">
                    –í–æ–π—Ç–∏
                  </Link>
                  <Link to="/register" className="btn btn-primary">
                    –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                  </Link>
                </div>
              )}
            </div>

            {/* –ú–æ–±–∏–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */}
            <div className="md:hidden flex items-center space-x-3">
              {isAuthenticated && (
                <>
                  {/* –ß–∞—Ç—ã */}
                  <button
                    onClick={handleChatsClick}
                    className="p-2 text-gray-700 hover:text-blue-600 rounded-full hover:bg-gray-100 transition-colors relative"
                    title="–ú–æ–∏ —á–∞—Ç—ã"
                  >
                    <MessageCircle size={20} />
                    {unreadCount > 0 && (
                      <span className="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full min-w-[18px] h-[18px] flex items-center justify-center px-1">
                        {unreadCount > 99 ? '99+' : unreadCount}
                      </span>
                    )}
                  </button>
                  
                  {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
                  <NotificationIcon />
                </>
              )}
              
              {/* –ì–∞–º–±—É—Ä–≥–µ—Ä –º–µ–Ω—é */}
              <button
                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
                className="p-2 text-gray-700 hover:text-blue-600 rounded-lg hover:bg-gray-100 transition-colors mobile-menu"
              >
                {mobileMenuOpen ? <X size={24} /> : <Menu size={24} />}
              </button>
            </div>
          </div>
        </div>

        {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
        {mobileMenuOpen && (
          <div className="md:hidden absolute top-full left-0 right-0 bg-white border-b shadow-lg z-50 mobile-menu">
            <div className="px-4 py-2 space-y-1">
              {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏ */}
              <Link to="/tasks" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                üìã –ó–∞—è–≤–∫–∏
              </Link>
              <Link to="/executors" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                üë∑ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏
              </Link>
              <Link to="/for-customers" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                üè† –î–ª—è –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
              </Link>
              <Link to="/for-executors" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                üîß –î–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
              </Link>
              <Link to="/news" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                üì∞ –ù–æ–≤–æ—Å—Ç–∏
              </Link>

              {isAuthenticated ? (
                <>
                  <div className="border-t border-gray-200 my-2"></div>
                  
                  {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ */}
                  <Link to="/profile" className="flex items-center px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                    <UserAvatar user={user} size="sm" className="mr-3" />
                    <span>{user?.name}</span>
                  </Link>
                  
                  {user?.role === 'customer' && (
                    <>
                      <Link to="/my-tasks" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                        üìÇ –ú–æ–∏ –∑–∞—è–≤–∫–∏
                      </Link>
                      <Link to="/create-task" className="block px-3 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-md transition-colors">
                        ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É
                      </Link>
                    </>
                  )}
                  
                  {user?.role === 'executor' && (
                    <Link to="/my-jobs" className="block px-3 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-md transition-colors">
                      üíº –ú–æ–∏ —Ä–∞–±–æ—Ç—ã
                    </Link>
                  )}

                  {user?.role === 'admin' && (
                    <Link to="/admin" className="block px-3 py-2 text-red-600 font-medium hover:bg-red-50 rounded-md transition-colors">
                      üõ°Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
                    </Link>
                  )}
                  
                  <div className="border-t border-gray-200 my-2"></div>
                  <button
                    onClick={handleLogout}
                    className="w-full text-left px-3 py-2 text-red-600 hover:bg-red-50 rounded-md transition-colors"
                  >
                    üö™ –í—ã–π—Ç–∏
                  </button>
                </>
              ) : (
                <>
                  <div className="border-t border-gray-200 my-2"></div>
                  <Link to="/login" className="block px-3 py-2 text-gray-700 hover:text-blue-600 hover:bg-gray-50 rounded-md transition-colors">
                    üîë –í–æ–π—Ç–∏
                  </Link>
                  <Link to="/register" className="block px-3 py-2 text-blue-600 font-medium hover:bg-blue-50 rounded-md transition-colors">
                    üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
                  </Link>
                </>
              )}
            </div>
          </div>
        )}
      </header>

      <main className="flex-1">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
          {children}
        </div>
      </main>

      <Footer />
    </div>
  )
}

export default Layout 