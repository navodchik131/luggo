require('dotenv').config();
const { User } = require('../src/models');
const { initializeDatabase } = require('../src/config/init');

const createAdminUser = async () => {
  try {
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    await initializeDatabase();

    // –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    const args = process.argv.slice(2);
    const emailArg = args.find(arg => arg.startsWith('--email='));
    const passwordArg = args.find(arg => arg.startsWith('--password='));
    const nameArg = args.find(arg => arg.startsWith('--name='));
    const phoneArg = args.find(arg => arg.startsWith('--phone='));

    // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    const adminData = {
      email: emailArg ? emailArg.split('=')[1] : 'admin@luggo.ru',
      password: passwordArg ? passwordArg.split('=')[1] : 'LuggoAdmin2025!',
      name: nameArg ? nameArg.split('=')[1] : '–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
      phone: phoneArg ? phoneArg.split('=')[1] : '79991234567',
      role: 'admin'
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å —Ç–∞–∫–∏–º email
    const existingAdmin = await User.findOne({ where: { email: adminData.email } });
    if (existingAdmin) {
      console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º email —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingAdmin.email);
      console.log('üîç –†–æ–ª—å:', existingAdmin.role);
      
      if (existingAdmin.role !== 'admin') {
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é —Ä–æ–ª—å –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...');
        await existingAdmin.update({ role: 'admin' });
        console.log('‚úÖ –†–æ–ª—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!');
      }
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const admin = await User.create(adminData);
    
    console.log('\nüéâ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
    console.log('üìß Email:', admin.email);
    console.log('üîë –ü–∞—Ä–æ–ª—å:', adminData.password);
    console.log('üë§ –ò–º—è:', admin.name);
    console.log('üì± –¢–µ–ª–µ—Ñ–æ–Ω:', admin.phone);
    console.log('üÜî ID:', admin.id);
    console.log('\nüöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –≤–æ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: https://luggo.ru/admin');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:', error);
  } finally {
    process.exit(0);
  }
};

// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É –µ—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç
if (process.argv.includes('--help')) {
  console.log(`
üîß –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ Luggo

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node createAdmin.js [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --email=admin@example.com    Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin@luggo.ru)
  --password=securePassword    –ü–∞—Ä–æ–ª—å (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: LuggoAdmin2025!)
  --name="–ò–º—è –ê–¥–º–∏–Ω–∞"          –ò–º—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  --phone=79001234567          –¢–µ–ª–µ—Ñ–æ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
  --help                       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

–ü—Ä–∏–º–µ—Ä—ã:
  node createAdmin.js
  node createAdmin.js --email=boss@luggo.ru --password=MySecurePass123
  node createAdmin.js --name="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" --phone=79123456789
  `);
  process.exit(0);
}

createAdminUser(); 