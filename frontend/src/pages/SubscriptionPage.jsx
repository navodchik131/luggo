import React, { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';
import api from '../services/api';
import '../styles/SubscriptionPage.scss';

const SubscriptionPage = () => {
  const { user } = useAuth();
  const [plans, setPlans] = useState([]);
  const [userSubscription, setUserSubscription] = useState(null);
  const [loading, setLoading] = useState(true);
  const [purchasing, setPurchasing] = useState(null);

  useEffect(() => {
    loadPlans();
    if (user) {
      loadUserSubscription();
    }
  }, [user]);

  const loadPlans = async () => {
    try {
      const response = await api.get('/subscription/plans');
      setPlans(response.data.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞—Ä–∏—Ñ–æ–≤:', error);
    } finally {
      setLoading(false);
    }
  };

  const loadUserSubscription = async () => {
    try {
      const response = await api.get('/subscription/me');
      setUserSubscription(response.data.data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏:', error);
    }
  };

  const handlePurchase = async (planId) => {
    if (!user) {
      alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç');
      return;
    }

    if (user.role !== 'executor') {
      alert('–ü–†–û –ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è–º');
      return;
    }

    setPurchasing(planId);

    try {
      const response = await api.post('/subscription/create-payment', {
        type: planId
      });

      if (response.data.success) {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã YooKassa
        window.location.href = response.data.data.paymentUrl;
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞:', error);
      alert(error.response?.data?.message || '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    } finally {
      setPurchasing(null);
    }
  };

  const handleCancelSubscription = async () => {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ü–†–û –ø–æ–¥–ø–∏—Å–∫—É?')) {
      return;
    }

    try {
      const response = await api.post('/subscription/cancel');
      if (response.data.success) {
        alert('–ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
        loadUserSubscription();
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏:', error);
      alert('–û—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏');
    }
  };

  if (loading) {
    return (
      <div className="subscription-page">
        <div className="loading">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤...</div>
      </div>
    );
  }

  return (
    <div className="subscription-page">
      <div className="container">
        <div className="subscription-header">
          <h1>‚≠ê –ü–†–û –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π</h1>
          <p>–ü–æ–ª—É—á–∞–π—Ç–µ –±–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤ –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ —Å Luggo –ü–†–û!</p>
        </div>

        {user && user.role === 'executor' && userSubscription?.hasPro && (
          <div className="current-subscription">
            <div className="pro-badge">
              <span className="icon">üíé</span>
              <div className="info">
                <h3>–ê–∫—Ç–∏–≤–Ω–∞—è –ü–†–û –ø–æ–¥–ø–∏—Å–∫–∞</h3>
                <p>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {new Date(userSubscription.proExpiresAt).toLocaleDateString('ru-RU')}</p>
                <p>–¢–∏–ø: {userSubscription.proType === 'pro' ? '–ü–†–û' : '–ü–†–û –ü–ª—é—Å'}</p>
              </div>
            </div>
            <button 
              className="cancel-btn"
              onClick={handleCancelSubscription}
            >
              –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
            </button>
          </div>
        )}

        <div className="plans-grid">
          {plans.map((plan) => (
            <div 
              key={plan.id} 
              className={`plan-card ${plan.popular ? 'popular' : ''}`}
            >
              {plan.popular && (
                <div className="popular-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>
              )}
              
              <div className="plan-header">
                <h3>{plan.name}</h3>
                <div className="price">
                  <span className="amount">{plan.price}</span>
                  <span className="currency">‚ÇΩ</span>
                  <span className="period">/{plan.period}</span>
                </div>
              </div>

              <div className="features">
                {plan.features.map((feature, index) => (
                  <div key={index} className="feature">
                    <span className="check">‚úÖ</span>
                    {feature}
                  </div>
                ))}
              </div>

              <button
                className={`purchase-btn ${purchasing === plan.id ? 'loading' : ''}`}
                onClick={() => handlePurchase(plan.id)}
                disabled={
                  purchasing === plan.id || 
                  !user || 
                  user.role !== 'executor' ||
                  (userSubscription?.hasPro && userSubscription?.proType === plan.id)
                }
              >
                {purchasing === plan.id ? (
                  '–°–æ–∑–¥–∞–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞...'
                ) : userSubscription?.hasPro && userSubscription?.proType === plan.id ? (
                  '–ê–∫—Ç–∏–≤–Ω–∞'
                ) : user?.role !== 'executor' ? (
                  '–¢–æ–ª—å–∫–æ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π'
                ) : !user ? (
                  '–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç'
                ) : (
                  '–ö—É–ø–∏—Ç—å'
                )}
              </button>
            </div>
          ))}
        </div>

        <div className="benefits-section">
          <h2>üéØ –ü–æ—á–µ–º—É —Å—Ç–æ–∏—Ç –∫—É–ø–∏—Ç—å –ü–†–û?</h2>
          <div className="benefits-grid">
            <div className="benefit">
              <div className="benefit-icon">üì±</div>
              <h3>–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
              <p>–ü–µ—Ä–≤—ã–º —É–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö —á–µ—Ä–µ–∑ Telegram –±–æ—Ç–∞</p>
            </div>
            <div className="benefit">
              <div className="benefit-icon">‚ö°</div>
              <h3>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –ø–æ–∏—Å–∫–µ</h3>
              <p>–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤—ã—à–µ –≤ —Å–ø–∏—Å–∫–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π</p>
            </div>
            <div className="benefit">
              <div className="benefit-icon">üí∞</div>
              <h3>–ë–æ–ª—å—à–µ –∑–∞–∫–∞–∑–æ–≤</h3>
              <p>–ü–†–û –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—é—Ç –≤ 3 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ –æ—Ç–∫–ª–∏–∫–æ–≤</p>
            </div>
            <div className="benefit">
              <div className="benefit-icon">üèÜ</div>
              <h3>–°—Ç–∞—Ç—É—Å —ç–∫—Å–ø–µ—Ä—Ç–∞</h3>
              <p>–ü–†–û –±–µ–π–¥–∂ –ø–æ–≤—ã—à–∞–µ—Ç –¥–æ–≤–µ—Ä–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤</p>
            </div>
          </div>
        </div>

        <div className="faq-section">
          <h2>‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
          <div className="faq-list">
            <div className="faq-item">
              <h4>–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</h4>
              <p>–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç. –î–æ—Å—Ç—É–ø –∫ –ü–†–û —Ñ—É–Ω–∫—Ü–∏—è–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.</p>
            </div>
            <div className="faq-item">
              <h4>–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏?</h4>
              <p>–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤—ã –ø–µ—Ä–µ—Å—Ç–∞–Ω–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞—è–≤–∫–∞—Ö, –Ω–æ —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å —É–∂–µ –ø—Ä–∏–Ω—è—Ç—ã–º–∏ –∑–∞–∫–∞–∑–∞–º–∏.</p>
            </div>
            <div className="faq-item">
              <h4>–ë–µ–∑–æ–ø–∞—Å–Ω–∞ –ª–∏ –æ–ø–ª–∞—Ç–∞?</h4>
              <p>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–¥–µ–∂–Ω—É—é –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É YooKassa. –í—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞—â–∏—â–µ–Ω—ã –∏ –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã.</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SubscriptionPage; 