const { User } = require('../src/models');
const { connectDB } = require('../src/config/database');

async function updateExistingExecutors() {
  try {
    await connectDB();
    
    console.log('üîÑ –û–±–Ω–æ–≤–ª—è—é —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π...');
    
    // –ù–∞–π—Ç–∏ –≤—Å–µ—Ö –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –±–µ–∑ —É—Å–ª—É–≥
    const executors = await User.findAll({
      where: {
        role: 'executor',
        services: null
      }
    });
    
    console.log(`–ù–∞–π–¥–µ–Ω–æ ${executors.length} –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π –±–µ–∑ —É—Å–ª—É–≥`);
    
    // –û–±–Ω–æ–≤–∏—Ç—å –∫–∞–∂–¥–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è —Å –±–∞–∑–æ–≤—ã–º –Ω–∞–±–æ—Ä–æ–º —É—Å–ª—É–≥
    for (const executor of executors) {
      const defaultServices = ['flat', 'office']; // –î–∞–µ–º –±–∞–∑–æ–≤—ã–µ —É—Å–ª—É–≥–∏
      
      await executor.update({
        services: defaultServices
      });
      
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: ${executor.name} (ID: ${executor.id})`);
    }
    
    console.log('‚úÖ –í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    process.exit(0);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π:', error);
    process.exit(1);
  }
}

updateExistingExecutors(); 