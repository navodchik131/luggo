#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è Luggo –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ (luggo.ru)

echo "üöÄ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Luggo –Ω–∞ luggo.ru..."
echo "‚ö° –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: PORT=3001, DB=luggo, USER=luggonew"

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_DIR="/home/luggo/luggo/"
BACKEND_DIR="$PROJECT_DIR/backend"
FRONTEND_DIR="$PROJECT_DIR/frontend"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞
if [ ! -d "$PROJECT_DIR" ]; then
    echo "‚ùå –ü–∞–ø–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $PROJECT_DIR"
    echo "üìÅ –°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É –∏ –∫–ª–æ–Ω–∏—Ä—É–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:"
    echo "sudo mkdir -p $PROJECT_DIR"
    echo "sudo chown \$USER:\$USER $PROJECT_DIR"
    echo "cd $PROJECT_DIR && git clone https://github.com/your-repo/luggo.git ."
    exit 1
fi

cd $PROJECT_DIR

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞
echo "üì• –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–¥–∞..."
git pull origin main

# Backend —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ backend..."
cd $BACKEND_DIR

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π backend..."
npm install --production

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–æ–∫ –¥–ª—è –ª–æ–≥–æ–≤ –∏ uploads
mkdir -p logs
mkdir -p uploads/avatars
mkdir -p uploads/vehicles

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chmod 755 uploads
chmod 755 uploads/avatars
chmod 755 uploads/vehicles

# –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .env –Ω–∞ –æ—Å–Ω–æ–≤–µ env.example"
    echo "–ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã: cp env.example .env && nano .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ Telegram —Ç–æ–∫–µ–Ω–∞
if ! grep -q "TELEGRAM_BOT_TOKEN" .env; then
    echo "üì± –î–æ–±–∞–≤–ª—è—é —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞..."
    echo "TELEGRAM_BOT_TOKEN=7386777652:AAEihENq6fLJQ-uKorx_3fLF-2VYIQEZngc" >> .env
    echo "‚úÖ –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω"
else
    echo "‚úÖ –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ—Ä—Ç–∞
if grep -q "PORT=5000" .env; then
    echo "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω –ø–æ—Ä—Ç 5000 –≤ .env, –º–µ–Ω—è—é –Ω–∞ 3001..."
    sed -i 's/PORT=5000/PORT=3001/g' .env
    echo "‚úÖ –ü–æ—Ä—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ 3001"
fi

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
echo "üîß –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
echo "   PORT: $(grep PORT .env | cut -d'=' -f2)"
echo "   NODE_ENV: $(grep NODE_ENV .env | cut -d'=' -f2)"
echo "   FRONTEND_URL: $(grep FRONTEND_URL .env | cut -d'=' -f2)"
echo "   DB_NAME: $(grep DB_NAME .env | cut -d'=' -f2)"
echo "   Telegram –±–æ—Ç: $(if grep -q TELEGRAM_BOT_TOKEN .env; then echo "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω"; else echo "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"; fi)"

# –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è)
if [ -f "package.json" ] && grep -q "sequelize" package.json; then
    echo "üóÑÔ∏è –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    npx sequelize-cli db:migrate --env production 2>/dev/null || echo "‚ö†Ô∏è –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ —É–∂–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ backend..."
pm2 stop luggo-backend 2>/dev/null || echo "Process not running"

# –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
echo "üöÄ –ó–∞–ø—É—Å–∫ backend –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ (–ø–æ—Ä—Ç 3001)..."
pm2 start ecosystem.config.js --env production

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM2
pm2 save

# Frontend —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)
if [ -d "$FRONTEND_DIR" ]; then
    echo "üé® –°–±–æ—Ä–∫–∞ frontend..."
    cd $FRONTEND_DIR
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π frontend
    npm install
    
    # –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    npm run build
    
    echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω –≤ $FRONTEND_DIR/dist"
fi

cd $BACKEND_DIR

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo "üìä –°—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:"
pm2 status luggo-backend

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞
echo ""
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π:"
netstat -tulnp | grep :3001 || echo "‚ö†Ô∏è –ü–æ—Ä—Ç 3001 –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª–æ–≥–æ–≤
echo ""
echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
pm2 logs luggo-backend --lines 10

echo ""
echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://luggo.ru"
echo "üîå Backend —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É: 3001"
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: pm2 monit"
echo "üìã –õ–æ–≥–∏: pm2 logs luggo-backend"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: pm2 restart luggo-backend"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞
echo ""
echo "ü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞..."
if grep -q "TELEGRAM_BOT_TOKEN" .env; then
    echo "‚úÖ –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –Ω–∞–π–¥–µ–Ω –≤ .env"
    echo "üîó Webhook URL: https://luggo.ru/webhook/telegram"
    echo "üì± –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å—Ç–∞—Ç—É—Å–∞
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å—Ç–∞—Ç—É—Å–∞..."
    curl -s -X POST "https://api.telegram.org/bot7386777652:AAEihENq6fLJQ-uKorx_3fLF-2VYIQEZngc/getWebhookInfo" | \
    python3 -c "import sys, json; data=json.load(sys.stdin); print(f\"URL: {data['result'].get('url', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}\"); print(f\"–°—Ç–∞—Ç—É—Å: {'‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' if data['result'].get('url') else '‚ùå –ù–µ –∞–∫—Ç–∏–≤–µ–Ω'}\")" 2>/dev/null || \
    echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å webhook (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)"
else
    echo "‚ö†Ô∏è TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ"
fi

echo ""
echo "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: pm2 logs luggo-backend"
echo "2. –ó–∞–π–¥–∏—Ç–µ –≤ Telegram –±–æ—Ç –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å"
echo "3. –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ"
echo "4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø—Ä–∏—à–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ" 