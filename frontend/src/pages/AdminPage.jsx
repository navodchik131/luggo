import api from '../services/api'
import logger from '../utils/logger'

const AdminPage = () => {
  const [demoDataLoading, setDemoDataLoading] = useState(false)
  const [demoDataStatus, setDemoDataStatus] = useState(null)

  const handleSeedDemoData = async () => {
    if (!window.confirm('–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ? –≠—Ç–æ —Å–æ–∑–¥–∞—Å—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—è–≤–∫–∏ –∏ –Ω–æ–≤–æ—Å—Ç–∏.')) {
      return
    }

    try {
      setDemoDataLoading(true)
      setDemoDataStatus('–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ...')
      
      const response = await api.post('/admin/seed-demo-data')
      
      if (response.data.success) {
        setDemoDataStatus(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ:
          üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏: ${response.data.data.users}
          üìã –ó–∞—è–≤–∫–∏: ${response.data.data.tasks}
          üíº –û—Ç–∫–ª–∏–∫–∏: ${response.data.data.bids}
          üí¨ –°–æ–æ–±—â–µ–Ω–∏—è: ${response.data.data.messages}
          üì∞ –ù–æ–≤–æ—Å—Ç–∏: ${response.data.data.news}
          ‚≠ê –û—Ç–∑—ã–≤—ã: ${response.data.data.reviews}`)
        
        logger.success('–î–µ–º–æ-–¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!')
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        loadStats()
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö:', error)
      setDemoDataStatus('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö')
    } finally {
      setDemoDataLoading(false)
    }
  }

  const handleClearAllData = async () => {
    if (!window.confirm('‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ —É–¥–∞–ª–∏—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
      return
    }

    try {
      setDemoDataLoading(true)
      setDemoDataStatus('–û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ...')
      
      const response = await api.post('/admin/clear-all-data')
      
      if (response.data.success) {
        setDemoDataStatus('‚úÖ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω—ã')
        logger.success('–î–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã')
        loadStats()
      }
    } catch (error) {
      logger.error('–û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error)
      setDemoDataStatus('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö')
    } finally {
      setDemoDataLoading(false)
    }
  }

  return (
    <div className="max-w-7xl mx-auto space-y-8">
      {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏ */}
      <div className="card">
        <h2 className="text-xl font-bold mb-6">üå± –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏</h2>
        
        <div className="space-y-4">
          <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h3 className="font-semibold text-blue-800 mb-2">
              –ó–∞–≥—Ä—É–∑–∫–∞ –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö
            </h3>
            <p className="text-blue-700 text-sm mb-4">
              –°–æ–∑–¥–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: 
              –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞—è–≤–∫–∏, –æ—Ç–∫–ª–∏–∫–∏, —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ—Ç–∑—ã–≤—ã.
            </p>
            <button
              onClick={handleSeedDemoData}
              disabled={demoDataLoading}
              className="btn btn-primary disabled:opacity-50"
            >
              {demoDataLoading ? '–ó–∞–≥—Ä—É–∂–∞–µ–º...' : 'üå± –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ'}
            </button>
          </div>

          {process.env.NODE_ENV !== 'production' && (
            <div className="bg-red-50 border border-red-200 rounded-lg p-4">
              <h3 className="font-semibold text-red-800 mb-2">
                ‚ö†Ô∏è –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
              </h3>
              <p className="text-red-700 text-sm mb-4">
                –£–¥–∞–ª—è–µ—Ç –í–°–ï –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã. –î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏.
              </p>
              <button
                onClick={handleClearAllData}
                disabled={demoDataLoading}
                className="btn btn-danger disabled:opacity-50"
              >
                {demoDataLoading ? '–û—á–∏—â–∞–µ–º...' : 'üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ'}
              </button>
            </div>
          )}

          {demoDataStatus && (
            <div className="bg-gray-50 border border-gray-200 rounded-lg p-4">
              <h4 className="font-semibold mb-2">–°—Ç–∞—Ç—É—Å –æ–ø–µ—Ä–∞—Ü–∏–∏:</h4>
              <pre className="text-sm text-gray-700 whitespace-pre-wrap">
                {demoDataStatus}
              </pre>
            </div>
          )}
        </div>
      </div>
    </div>
  )
}

export default AdminPage 