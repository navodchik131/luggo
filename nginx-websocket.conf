# Конфигурация nginx для поддержки WebSocket (Socket.IO)
# Добавьте эти настройки в ваш server блок

server {
    listen 80;
    listen 443 ssl;
    server_name luggo.ru www.luggo.ru;

    # SSL настройки (если используете HTTPS)
    ssl_certificate /path/to/your/certificate.crt;
    ssl_certificate_key /path/to/your/private.key;

    # Основная локация для фронтенда
    location / {
        try_files $uri $uri/ /index.html;
        root /path/to/your/frontend/dist;
        index index.html;
        
        # Заголовки для статических файлов
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    }

    # API проксирование
    location /api/ {
        proxy_pass http://localhost:5000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Заголовки для CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        # Обработка OPTIONS запросов
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # КРИТИЧЕСКИ ВАЖНО: WebSocket проксирование для Socket.IO
    location /socket.io/ {
        proxy_pass http://localhost:5000/socket.io/;
        
        # Заголовки для WebSocket
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Таймауты для длительных соединений
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 86400;
        
        # Отключаем буферизацию для real-time
        proxy_buffering off;
        
        # Заголовки для CORS
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
    }

    # Статические файлы (uploads)
    location /uploads/ {
        proxy_pass http://localhost:5000/uploads/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS для загруженных файлов
        add_header Access-Control-Allow-Origin *;
        add_header Cross-Origin-Resource-Policy cross-origin;
    }

    # Логи
    access_log /var/log/nginx/luggo_access.log;
    error_log /var/log/nginx/luggo_error.log;
}

# Дополнительные настройки для лучшей производительности WebSocket
http {
    # Увеличиваем лимиты для WebSocket
    proxy_read_timeout 86400s;
    proxy_send_timeout 86400s;
    
    # Настройки для upstream (если используете несколько серверов)
    upstream luggo_backend {
        server localhost:5000;
        keepalive 32;
    }
    
    # Карта для определения типа соединения
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
} 